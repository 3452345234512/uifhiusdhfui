import { useState, useMemo } from 'react'
import { Link } from 'react-router-dom'
import { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts'
import './App.css'

function MixedPool() {
  // –ö–õ–Æ–ß–ï–í–´–ï –í–í–û–î–ù–´–ï –ü–ê–†–ê–ú–ï–¢–†–´
  
  // 1. –≠–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—è
  const [companyCostEE, setCompanyCostEE] = useState(5.4) // –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –≠–≠ (‚ÇΩ/–∫–í—Ç‚ãÖ—á)
  const [clientCostEE, setClientCostEE] = useState(6.2) // –ü—Ä–æ–¥–∞–∂–∞ –≠–≠ –∫–ª–∏–µ–Ω—Ç—É (‚ÇΩ/–∫–í—Ç‚ãÖ—á)
  
  // 2. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
  const [l9Count, setL9Count] = useState(10) // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ Antminer L9
  const [s21Count, setS21Count] = useState(10) // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ Antminer S21 Pro
  const [marginPercent, setMarginPercent] = useState(30) // –ù–∞—Ü–µ–Ω–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–∞ —Ç–æ–∫–µ–Ω—ã (%)
  
  // 3. –ö—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
  const [btcPriceNow, setBtcPriceNow] = useState(106497) // –ö—É—Ä—Å BTC ($)
  const [ltcPriceNow, setLtcPriceNow] = useState(95.43) // –ö—É—Ä—Å LTC ($)
  const [dogePriceNow, setDogePriceNow] = useState(0.2027) // –ö—É—Ä—Å DOGE ($)
  
  // 4. –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
  const [btcPerTHPerDay, setBtcPerTHPerDay] = useState(0.00000043) // BTC –∑–∞ TH –≤ –¥–µ–Ω—å
  const [ltcPerMHPerDay, setLtcPerMHPerDay] = useState(0.01891239 / 16000) // LTC –∑–∞ MH/s –≤ –¥–µ–Ω—å
  const [dogePerMHPerDay, setDogePerMHPerDay] = useState(64.72873183 / 16000) // DOGE –∑–∞ MH/s –≤ –¥–µ–Ω—å

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
  const usdtRate = 82 // –ö—É—Ä—Å USDT –∫ —Ä—É–±–ª—é
  const difficultyGrowth = 40 // –°—Ä–µ–¥–Ω–∏–π —Ä–æ—Å—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –º–∏–∫—Å–∞ BTC+LTC

  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
  const miners = {
    'L9': {
      name: 'Antminer L9',
      hashrate: 16000, // MH/s
      power: 3360, // –í—Ç
      price: 5250, // USD
      efficiency: 0.21, // –í—Ç/MH
      type: 'LTC+DOGE'
    },
    'S21Pro': {
      name: 'Antminer S21 Pro',
      hashrate: 245, // TH/s
      power: 3675, // –í—Ç
      price: 3900, // USD
      efficiency: 15, // –í—Ç/TH
      type: 'BTC'
    }
  }

  // –†–ê–°–ß–Å–¢ –ü–û–ö–ê–ó–ê–¢–ï–õ–ï–ô –ü–£–õ–ê
  const poolCalculations = useMemo(() => {
    // –ú–æ—â–Ω–æ—Å—Ç–∏
    const totalL9MH = l9Count * miners.L9.hashrate
    const totalS21TH = s21Count * miners.S21Pro.hashrate
    
    // –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ
    const l9PowerWatts = l9Count * miners.L9.power
    const s21PowerWatts = s21Count * miners.S21Pro.power
    const totalPowerWatts = l9PowerWatts + s21PowerWatts
    const totalPowerMW = totalPowerWatts / 1000000
    
    // –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å
    const l9CostTotal = l9Count * miners.L9.price
    const s21CostTotal = s21Count * miners.S21Pro.price
    const totalInvestment = l9CostTotal + s21CostTotal
    
    return {
      totalL9MH,
      totalS21TH,
      l9PowerWatts,
      s21PowerWatts,
      totalPowerWatts,
      totalPowerMW,
      l9CostTotal,
      s21CostTotal,
      totalInvestment
    }
  }, [l9Count, s21Count])

  const { totalL9MH, totalS21TH, l9PowerWatts, s21PowerWatts, totalPowerWatts, totalPowerMW, l9CostTotal, s21CostTotal, totalInvestment } = poolCalculations

  // –≠–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ
  const l9EnergyPerMH = (miners.L9.efficiency * 24) / 1000 // –∫–í—Ç/–¥–µ–Ω—å –Ω–∞ MH
  const s21EnergyPerTH = (miners.S21Pro.efficiency * 1.1 * 24) / 1000 // –∫–í—Ç/–¥–µ–Ω—å –Ω–∞ TH
  
  // –ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ –≠–≠
  const companyCostPerKwhL9 = (companyCostEE / usdtRate) * l9EnergyPerMH
  const clientCostPerKwhL9 = (clientCostEE / usdtRate) * l9EnergyPerMH * 1.1
  
  const companyCostPerKwhS21 = (companyCostEE / usdtRate) * s21EnergyPerTH
  const clientCostPerKwhS21 = (clientCostEE / usdtRate) * s21EnergyPerTH * 1.1
  
  // –î–æ—Ö–æ–¥—ã –æ—Ç –º–∞–π–Ω–∏–Ω–≥–∞
  const l9MiningRevenuePerMH = (ltcPerMHPerDay * ltcPriceNow) + (dogePerMHPerDay * dogePriceNow)
  const s21MiningRevenuePerTH = btcPerTHPerDay * btcPriceNow
  
  // –†–∞—Å—á–µ—Ç –¥–ª—è L9 —á–∞—Å—Ç–∏
  const l9Calculations = useMemo(() => {
    const costPerMH = miners.L9.price / miners.L9.hashrate
    const tokenPriceL9 = costPerMH * (1 + marginPercent / 100)
    const tokenSalesRevenue = totalL9MH * (tokenPriceL9 - costPerMH)
    const energyProfitPerYear = totalL9MH * (clientCostPerKwhL9 - companyCostPerKwhL9) * 365
    
    const investorDailyRevenue = l9MiningRevenuePerMH - clientCostPerKwhL9
    const investorAnnualRevenue = investorDailyRevenue * 365
    const investorROI = (investorAnnualRevenue / tokenPriceL9) * 100
    
    return {
      costPerMH,
      tokenPriceL9,
      tokenSalesRevenue,
      energyProfitPerYear,
      investorDailyRevenue,
      investorAnnualRevenue,
      investorROI
    }
  }, [totalL9MH, marginPercent, l9MiningRevenuePerMH, clientCostPerKwhL9, companyCostPerKwhL9])

  // –†–∞—Å—á–µ—Ç –¥–ª—è S21 —á–∞—Å—Ç–∏
  const s21Calculations = useMemo(() => {
    const costPerTH = miners.S21Pro.price / miners.S21Pro.hashrate
    const tokenPriceS21 = costPerTH * (1 + marginPercent / 100)
    const tokenSalesRevenue = totalS21TH * (tokenPriceS21 - costPerTH)
    const energyProfitPerYear = totalS21TH * (clientCostPerKwhS21 - companyCostPerKwhS21) * 365
    
    const investorDailyRevenue = s21MiningRevenuePerTH - clientCostPerKwhS21
    const investorAnnualRevenue = investorDailyRevenue * 365
    const investorROI = (investorAnnualRevenue / tokenPriceS21) * 100
    
    return {
      costPerTH,
      tokenPriceS21,
      tokenSalesRevenue,
      energyProfitPerYear,
      investorDailyRevenue,
      investorAnnualRevenue,
      investorROI
    }
  }, [totalS21TH, marginPercent, s21MiningRevenuePerTH, clientCostPerKwhS21, companyCostPerKwhS21])

  // –û–±—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø—É–ª–∞
  const totalRevenue = l9Calculations.tokenSalesRevenue + s21Calculations.tokenSalesRevenue + 
                        l9Calculations.energyProfitPerYear + s21Calculations.energyProfitPerYear
  const companyROI = (totalRevenue / totalInvestment) * 100

  // –°—Ä–µ–¥–Ω–∏–π ROI –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞ (–≤–∑–≤–µ—à–µ–Ω–Ω—ã–π)
  const totalTokens = totalL9MH + totalS21TH
  const avgInvestorROI = ((l9Calculations.investorROI * totalL9MH) + (s21Calculations.investorROI * totalS21TH)) / totalTokens

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-900 via-indigo-900 to-blue-900 pb-20">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="bg-gradient-to-r from-purple-600 via-pink-600 to-indigo-600 text-white py-8 shadow-2xl mb-8">
        <div className="max-w-7xl mx-auto px-6">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-4xl font-bold mb-2 flex items-center gap-3">
                <span className="text-5xl">üîÄ</span> HASH2CASH Mixed Pool
              </h1>
              <p className="text-purple-100 text-lg">
                –ú–∏–∫—Å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è: L9 (LTC+DOGE) + S21 Pro (BTC) - –¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–∏—Å–∫–æ–≤
              </p>
            </div>
            <div className="flex gap-4">
              <Link 
                to="/" 
                className="bg-white/20 backdrop-blur-sm px-4 py-2 rounded-lg hover:bg-white/30 transition-colors"
              >
                ‚Çø Bitcoin Pool
              </Link>
              <Link 
                to="/litecoin" 
                className="bg-white/20 backdrop-blur-sm px-4 py-2 rounded-lg hover:bg-white/30 transition-colors"
              >
                ü™ô Litecoin Pool
              </Link>
            </div>
          </div>
        </div>
      </div>

      {/* –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */}
      <div className="sticky top-0 z-50 bg-gradient-to-r from-purple-600 via-pink-600 to-indigo-600 shadow-2xl mb-8">
        <div className="max-w-7xl mx-auto px-6 py-4">
          <div className="grid grid-cols-2 md:grid-cols-6 gap-3 text-center mb-4">
            <div className="bg-white/10 backdrop-blur-sm rounded-lg px-3 py-2">
              <div className="text-white/70 text-xs font-semibold">L9 –ê—Å–∏–∫–æ–≤</div>
              <div className="text-white font-bold text-lg">{l9Count}</div>
              <div className="text-white/60 text-xs mt-1">{totalL9MH.toLocaleString()} MH/s</div>
            </div>
            <div className="bg-white/10 backdrop-blur-sm rounded-lg px-3 py-2">
              <div className="text-white/70 text-xs font-semibold">S21 –ê—Å–∏–∫–æ–≤</div>
              <div className="text-white font-bold text-lg">{s21Count}</div>
              <div className="text-white/60 text-xs mt-1">{totalS21TH.toLocaleString()} TH/s</div>
            </div>
            <div className="bg-white/10 backdrop-blur-sm rounded-lg px-3 py-2">
              <div className="text-white/70 text-xs font-semibold">–ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ</div>
              <div className="text-white font-bold text-lg">{totalPowerMW.toFixed(2)} –ú–í—Ç</div>
              <div className="text-white/60 text-xs mt-1">{totalPowerWatts.toLocaleString()}W</div>
            </div>
            <div className="bg-white/10 backdrop-blur-sm rounded-lg px-3 py-2">
              <div className="text-white/70 text-xs font-semibold">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏</div>
              <div className="text-white font-bold text-lg">${(totalInvestment/1000).toFixed(0)}k</div>
              <div className="text-white/60 text-xs mt-1">${totalInvestment.toLocaleString()}</div>
            </div>
            <div className="bg-white/10 backdrop-blur-sm rounded-lg px-3 py-2">
              <div className="text-white/70 text-xs font-semibold">ROI –ö–æ–º–ø–∞–Ω–∏–∏</div>
              <div className="text-white font-bold text-lg">{companyROI.toFixed(1)}%</div>
              <div className="text-white/60 text-xs mt-1">–ì–æ–¥ 1</div>
            </div>
            <div className="bg-white/10 backdrop-blur-sm rounded-lg px-3 py-2">
              <div className="text-white/70 text-xs font-semibold">ROI –ò–Ω–≤–µ—Å—Ç–æ—Ä–∞</div>
              <div className="text-white font-bold text-lg">{avgInvestorROI.toFixed(1)}%</div>
              <div className="text-white/60 text-xs mt-1">–°—Ä–µ–¥–Ω–∏–π</div>
            </div>
          </div>
          
          {/* –ü–æ–ª–∑—É–Ω–æ–∫ –Ω–∞—Ü–µ–Ω–∫–∏ */}
          <div className="bg-white/10 backdrop-blur-sm rounded-lg px-4 py-3">
            <div className="flex items-center gap-4">
              <span className="text-white font-semibold text-sm whitespace-nowrap">üí∞ –ù–∞—Ü–µ–Ω–∫–∞ –Ω–∞ —Ç–æ–∫–µ–Ω—ã:</span>
              <div className="flex-1">
                <input
                  type="range"
                  min="0"
                  max="100"
                  value={marginPercent}
                  onChange={(e) => setMarginPercent(parseInt(e.target.value))}
                  className="w-full h-2 rounded-lg appearance-none cursor-pointer"
                  style={{
                    background: `linear-gradient(to right, #10b981 0%, #10b981 ${marginPercent}%, #e5e7eb ${marginPercent}%, #e5e7eb 100%)`
                  }}
                />
                <div className="text-xs text-white/90 mt-1">
                  {marginPercent}% –Ω–∞—Ü–µ–Ω–∫–∞
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-6">
        <div className="space-y-6">
          
          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è */}
          <div className="bg-white rounded-2xl shadow-2xl p-6">
            <h3 className="text-lg font-semibold text-gray-700 mb-3 flex items-center gap-2">
              <span className="text-purple-500">üñ•Ô∏è</span> –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="bg-cyan-50 p-4 rounded-lg border-2 border-cyan-300">
                <label className="block text-sm font-semibold text-cyan-700 mb-2">
                  ü™ô –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ Antminer L9 (LTC+DOGE)
                </label>
                <input
                  type="number"
                  value={l9Count}
                  onChange={(e) => setL9Count(parseInt(e.target.value) || 0)}
                  min="0"
                  className="w-full px-4 py-2 text-2xl font-bold border-2 border-cyan-400 rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-500"
                />
                <div className="text-xs text-gray-600 mt-1">
                  –ú–æ—â–Ω–æ—Å—Ç—å: {totalL9MH.toLocaleString()} MH/s | –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ: {(l9PowerWatts/1000).toFixed(1)} –∫–í—Ç
                </div>
              </div>
              <div className="bg-orange-50 p-4 rounded-lg border-2 border-orange-300">
                <label className="block text-sm font-semibold text-orange-700 mb-2">
                  ‚Çø –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ Antminer S21 Pro (BTC)
                </label>
                <input
                  type="number"
                  value={s21Count}
                  onChange={(e) => setS21Count(parseInt(e.target.value) || 0)}
                  min="0"
                  className="w-full px-4 py-2 text-2xl font-bold border-2 border-orange-400 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500"
                />
                <div className="text-xs text-gray-600 mt-1">
                  –ú–æ—â–Ω–æ—Å—Ç—å: {totalS21TH.toLocaleString()} TH/s | –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ: {(s21PowerWatts/1000).toFixed(1)} –∫–í—Ç
                </div>
              </div>
            </div>
          </div>

          {/* 1. –≠–õ–ï–ö–¢–†–û–≠–ù–ï–†–ì–ò–Ø */}
          <div className="bg-white rounded-2xl shadow-2xl p-6">
            <h3 className="text-lg font-semibold text-gray-700 mb-3 flex items-center gap-2">
              <span className="text-yellow-500">‚ö°</span> 1. –≠–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—è
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="bg-yellow-50 p-4 rounded-lg border-2 border-yellow-300">
                <label className="block text-sm font-semibold text-yellow-700 mb-2">
                  –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –≠–≠ (‚ÇΩ/–∫–í—Ç‚ãÖ—á)
                </label>
                <input
                  type="number"
                  value={companyCostEE}
                  onChange={(e) => setCompanyCostEE(parseFloat(e.target.value))}
                  step="0.1"
                  className="w-full px-4 py-2 text-2xl font-bold border-2 border-yellow-400 rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500"
                />
                <div className="text-xs text-gray-600 mt-1">
                  –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏
                </div>
              </div>
              <div className="bg-green-50 p-4 rounded-lg border-2 border-green-300">
                <label className="block text-sm font-semibold text-green-700 mb-2">
                  –ü—Ä–æ–¥–∞–∂–∞ –≠–≠ –∫–ª–∏–µ–Ω—Ç—É (‚ÇΩ/–∫–í—Ç‚ãÖ—á)
                </label>
                <input
                  type="number"
                  value={clientCostEE}
                  onChange={(e) => setClientCostEE(parseFloat(e.target.value))}
                  step="0.1"
                  className="w-full px-4 py-2 text-2xl font-bold border-2 border-green-400 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
                />
                <div className="text-xs text-gray-600 mt-1">
                  –° –Ω–∞—Ü–µ–Ω–∫–æ–π 10%: {((clientCostEE - companyCostEE) / companyCostEE * 100).toFixed(1)}%
                </div>
              </div>
            </div>
          </div>

          {/* –°–≤–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –¥–æ—Ö–æ–¥–æ–≤ */}
          <div className="bg-white rounded-2xl shadow-2xl p-6">
            <h2 className="text-2xl font-bold mb-6 text-gray-800">üí∞ –°–≤–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –¥–æ—Ö–æ–¥–æ–≤ –∏ ROI</h2>
            
            <div className="overflow-x-auto">
              <table className="w-full border-collapse">
                <thead className="bg-gradient-to-r from-purple-600 to-pink-600 text-white">
                  <tr>
                    <th className="p-3 text-left">–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</th>
                    <th className="p-3 text-center">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th>
                    <th className="p-3 text-center">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏</th>
                    <th className="p-3 text-center">–î–æ—Ö–æ–¥ –æ—Ç —Ç–æ–∫–µ–Ω–æ–≤</th>
                    <th className="p-3 text-center">–î–æ—Ö–æ–¥ –æ—Ç –≠–≠/–≥–æ–¥</th>
                    <th className="p-3 text-center">ROI –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞</th>
                    <th className="p-3 text-center">–î–æ—Ö–æ–¥ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞/–≥–æ–¥</th>
                  </tr>
                </thead>
                <tbody className="text-sm">
                  <tr className="bg-cyan-50 hover:bg-cyan-100">
                    <td className="p-3 font-semibold">
                      <div>Antminer L9</div>
                      <div className="text-xs text-gray-500">LTC+DOGE Mining</div>
                    </td>
                    <td className="p-3 text-center font-bold">{l9Count} —à—Ç</td>
                    <td className="p-3 text-center">${l9CostTotal.toLocaleString()}</td>
                    <td className="p-3 text-center text-green-600 font-bold">${l9Calculations.tokenSalesRevenue.toLocaleString()}</td>
                    <td className="p-3 text-center text-blue-600 font-bold">${l9Calculations.energyProfitPerYear.toLocaleString()}</td>
                    <td className="p-3 text-center">
                      <span className="font-bold text-xl text-cyan-700">{l9Calculations.investorROI.toFixed(1)}%</span>
                    </td>
                    <td className="p-3 text-center font-bold">${l9Calculations.investorAnnualRevenue.toFixed(2)}</td>
                  </tr>
                  <tr className="bg-orange-50 hover:bg-orange-100">
                    <td className="p-3 font-semibold">
                      <div>Antminer S21 Pro</div>
                      <div className="text-xs text-gray-500">Bitcoin Mining</div>
                    </td>
                    <td className="p-3 text-center font-bold">{s21Count} —à—Ç</td>
                    <td className="p-3 text-center">${s21CostTotal.toLocaleString()}</td>
                    <td className="p-3 text-center text-green-600 font-bold">${s21Calculations.tokenSalesRevenue.toLocaleString()}</td>
                    <td className="p-3 text-center text-blue-600 font-bold">${s21Calculations.energyProfitPerYear.toLocaleString()}</td>
                    <td className="p-3 text-center">
                      <span className="font-bold text-xl text-orange-700">{s21Calculations.investorROI.toFixed(1)}%</span>
                    </td>
                    <td className="p-3 text-center font-bold">${s21Calculations.investorAnnualRevenue.toFixed(2)}</td>
                  </tr>
                  <tr className="bg-purple-100 font-bold text-lg">
                    <td className="p-3">–ò–¢–û–ì–û</td>
                    <td className="p-3 text-center">{l9Count + s21Count} —à—Ç</td>
                    <td className="p-3 text-center text-red-700">${totalInvestment.toLocaleString()}</td>
                    <td className="p-3 text-center text-green-700">${(l9Calculations.tokenSalesRevenue + s21Calculations.tokenSalesRevenue).toLocaleString()}</td>
                    <td className="p-3 text-center text-blue-700">${(l9Calculations.energyProfitPerYear + s21Calculations.energyProfitPerYear).toLocaleString()}</td>
                    <td className="p-3 text-center">
                      <span className="text-2xl text-purple-700">{avgInvestorROI.toFixed(1)}%</span>
                    </td>
                    <td className="p-3 text-center text-purple-700">${((l9Calculations.investorAnnualRevenue * totalL9MH) + (s21Calculations.investorAnnualRevenue * totalS21TH)).toLocaleString()}</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>

          {/* ROI –∫–æ–º–ø–∞–Ω–∏–∏ */}
          <div className="bg-white rounded-2xl shadow-2xl p-6">
            <h2 className="text-2xl font-bold mb-6 text-gray-800">üè¢ ROI –∫–æ–º–ø–∞–Ω–∏–∏ (–≥–æ–¥ 1)</h2>
            
            <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
              <div className="bg-red-50 p-4 rounded-lg border-2 border-red-300">
                <div className="text-sm text-gray-600 mb-1">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏</div>
                <div className="text-3xl font-bold text-red-700">${totalInvestment.toLocaleString()}</div>
                <div className="text-xs text-gray-500">L9: ${l9CostTotal.toLocaleString()} + S21: ${s21CostTotal.toLocaleString()}</div>
              </div>
              <div className="bg-green-50 p-4 rounded-lg border-2 border-green-300">
                <div className="text-sm text-gray-600 mb-1">–î–æ—Ö–æ–¥ –æ—Ç —Ç–æ–∫–µ–Ω–æ–≤</div>
                <div className="text-3xl font-bold text-green-700">${(l9Calculations.tokenSalesRevenue + s21Calculations.tokenSalesRevenue).toLocaleString()}</div>
                <div className="text-xs text-gray-500">–ï–¥–∏–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ</div>
              </div>
              <div className="bg-blue-50 p-4 rounded-lg border-2 border-blue-300">
                <div className="text-sm text-gray-600 mb-1">–î–æ—Ö–æ–¥ –æ—Ç –≠–≠</div>
                <div className="text-3xl font-bold text-blue-700">${(l9Calculations.energyProfitPerYear + s21Calculations.energyProfitPerYear).toLocaleString()}</div>
                <div className="text-xs text-gray-500">–ï–∂–µ–≥–æ–¥–Ω–æ</div>
              </div>
              <div className="bg-purple-50 p-4 rounded-lg border-2 border-purple-300">
                <div className="text-sm text-gray-600 mb-1">ROI –∫–æ–º–ø–∞–Ω–∏–∏</div>
                <div className="text-4xl font-bold text-purple-700">{companyROI.toFixed(1)}%</div>
                <div className="text-xs text-gray-500">= ${totalRevenue.toLocaleString()} √∑ ${totalInvestment.toLocaleString()}</div>
              </div>
            </div>
          </div>

          {/* –î–µ—Ç–∞–ª—å–Ω–∞—è —Ä–∞–∑–±–∏–≤–∫–∞ –ø–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—é */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {/* L9 –±–ª–æ–∫ */}
            <div className="bg-gradient-to-br from-cyan-50 to-blue-50 rounded-2xl shadow-2xl p-6 border-2 border-cyan-300">
              <h3 className="text-xl font-bold text-cyan-900 mb-4">ü™ô Antminer L9 (LTC+DOGE)</h3>
              
              <div className="space-y-3">
                <div className="bg-white p-3 rounded-lg">
                  <div className="flex justify-between mb-1">
                    <span className="text-gray-600">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</span>
                    <span className="font-bold">{l9Count} —à—Ç</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">–ú–æ—â–Ω–æ—Å—Ç—å:</span>
                    <span className="font-bold">{totalL9MH.toLocaleString()} MH/s</span>
                  </div>
                </div>
                
                <div className="bg-white p-3 rounded-lg">
                  <div className="font-semibold text-cyan-900 mb-2">üí∞ –§–∏–Ω–∞–Ω—Å—ã –∫–æ–º–ø–∞–Ω–∏–∏:</div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏:</span>
                    <span className="font-bold text-red-700">${l9CostTotal.toLocaleString()}</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">–î–æ—Ö–æ–¥ (—Ç–æ–∫–µ–Ω—ã):</span>
                    <span className="font-bold text-green-700">${l9Calculations.tokenSalesRevenue.toLocaleString()}</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">–î–æ—Ö–æ–¥ (–≠–≠/–≥–æ–¥):</span>
                    <span className="font-bold text-blue-700">${l9Calculations.energyProfitPerYear.toLocaleString()}</span>
                  </div>
                </div>
                
                <div className="bg-white p-3 rounded-lg">
                  <div className="font-semibold text-cyan-900 mb-2">üë§ –ò–Ω–≤–µ—Å—Ç–æ—Ä:</div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">–¶–µ–Ω–∞ —Ç–æ–∫–µ–Ω–∞:</span>
                    <span className="font-bold">${l9Calculations.tokenPriceL9.toFixed(4)}</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">–î–æ—Ö–æ–¥/–≥–æ–¥:</span>
                    <span className="font-bold text-green-700">${l9Calculations.investorAnnualRevenue.toFixed(2)}</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">ROI:</span>
                    <span className="font-bold text-xl text-cyan-700">{l9Calculations.investorROI.toFixed(1)}%</span>
                  </div>
                </div>
              </div>
            </div>

            {/* S21 –±–ª–æ–∫ */}
            <div className="bg-gradient-to-br from-orange-50 to-yellow-50 rounded-2xl shadow-2xl p-6 border-2 border-orange-300">
              <h3 className="text-xl font-bold text-orange-900 mb-4">‚Çø Antminer S21 Pro (BTC)</h3>
              
              <div className="space-y-3">
                <div className="bg-white p-3 rounded-lg">
                  <div className="flex justify-between mb-1">
                    <span className="text-gray-600">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</span>
                    <span className="font-bold">{s21Count} —à—Ç</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">–ú–æ—â–Ω–æ—Å—Ç—å:</span>
                    <span className="font-bold">{totalS21TH.toLocaleString()} TH/s</span>
                  </div>
                </div>
                
                <div className="bg-white p-3 rounded-lg">
                  <div className="font-semibold text-orange-900 mb-2">üí∞ –§–∏–Ω–∞–Ω—Å—ã –∫–æ–º–ø–∞–Ω–∏–∏:</div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏:</span>
                    <span className="font-bold text-red-700">${s21CostTotal.toLocaleString()}</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">–î–æ—Ö–æ–¥ (—Ç–æ–∫–µ–Ω—ã):</span>
                    <span className="font-bold text-green-700">${s21Calculations.tokenSalesRevenue.toLocaleString()}</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">–î–æ—Ö–æ–¥ (–≠–≠/–≥–æ–¥):</span>
                    <span className="font-bold text-blue-700">${s21Calculations.energyProfitPerYear.toLocaleString()}</span>
                  </div>
                </div>
                
                <div className="bg-white p-3 rounded-lg">
                  <div className="font-semibold text-orange-900 mb-2">üë§ –ò–Ω–≤–µ—Å—Ç–æ—Ä:</div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">–¶–µ–Ω–∞ —Ç–æ–∫–µ–Ω–∞:</span>
                    <span className="font-bold">${s21Calculations.tokenPriceS21.toFixed(2)}</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">–î–æ—Ö–æ–¥/–≥–æ–¥:</span>
                    <span className="font-bold text-green-700">${s21Calculations.investorAnnualRevenue.toFixed(2)}</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">ROI:</span>
                    <span className="font-bold text-xl text-orange-700">{s21Calculations.investorROI.toFixed(1)}%</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –º–∏–∫—Å–∞ */}
          <div className="bg-gradient-to-r from-green-50 to-emerald-50 rounded-2xl shadow-2xl p-6 border-2 border-green-300">
            <h2 className="text-2xl font-bold mb-4 text-green-900">‚≠ê –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏</h2>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="bg-white p-4 rounded-lg">
                <div className="text-3xl mb-2">üõ°Ô∏è</div>
                <h3 className="font-bold text-gray-800 mb-2">–°–Ω–∏–∂–µ–Ω–∏–µ —Ä–∏—Å–∫–æ–≤</h3>
                <p className="text-sm text-gray-600">
                  –ï—Å–ª–∏ –ø–∞–¥–∞–µ—Ç BTC, –≤—ã—Ä—É—á–∞–µ—Ç LTC+DOGE. –ï—Å–ª–∏ –ø–∞–¥–∞–µ—Ç LTC - –≤—ã—Ä—É—á–∞–µ—Ç BTC.
                </p>
              </div>
              <div className="bg-white p-4 rounded-lg">
                <div className="text-3xl mb-2">üìä</div>
                <h3 className="font-bold text-gray-800 mb-2">–†–∞–∑–Ω–∞—è –¥–∏–Ω–∞–º–∏–∫–∞</h3>
                <p className="text-sm text-gray-600">
                  BTC —Ä–∞—Å—Ç–µ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç—å {difficultyGrowth}%/–≥–æ–¥, LTC - 30%/–≥–æ–¥. –ú–∏–∫—Å —Å–Ω–∏–∂–∞–µ—Ç –æ–±—â–∏–π —Ä–∏—Å–∫.
                </p>
              </div>
              <div className="bg-white p-4 rounded-lg">
                <div className="text-3xl mb-2">üíé</div>
                <h3 className="font-bold text-gray-800 mb-2">3 –º–æ–Ω–µ—Ç—ã –≤ 1</h3>
                <p className="text-sm text-gray-600">
                  BTC + LTC + DOGE. –î–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ 3 –º–æ–Ω–µ—Ç–∞–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.
                </p>
              </div>
            </div>
          </div>

        </div>
      </div>
      
      {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      <div className="fixed bottom-8 right-8 z-50 flex flex-col gap-3">
        <Link 
          to="/" 
          className="flex items-center gap-3 bg-gradient-to-r from-orange-500 to-yellow-600 text-white px-6 py-4 rounded-full font-bold shadow-2xl hover:from-orange-600 hover:to-yellow-700 transition-all transform hover:scale-105"
        >
          <span className="text-2xl">‚Çø</span>
          <span>Bitcoin Pool</span>
        </Link>
        <Link 
          to="/litecoin" 
          className="flex items-center gap-3 bg-gradient-to-r from-cyan-500 to-blue-600 text-white px-6 py-4 rounded-full font-bold shadow-2xl hover:from-cyan-600 hover:to-blue-700 transition-all transform hover:scale-105"
        >
          <span className="text-2xl">ü™ô</span>
          <span>Litecoin Pool</span>
        </Link>
        <Link 
          to="/details" 
          className="flex items-center gap-3 bg-gradient-to-r from-green-500 to-emerald-600 text-white px-6 py-4 rounded-full font-bold shadow-2xl hover:from-green-600 hover:to-emerald-700 transition-all transform hover:scale-105"
        >
          <span className="text-2xl">üìä</span>
          <span>–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑</span>
        </Link>
      </div>
    </div>
  )
}

export default MixedPool

